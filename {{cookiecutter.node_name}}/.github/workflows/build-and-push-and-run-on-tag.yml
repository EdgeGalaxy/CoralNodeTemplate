name: Build and Push Docker Image on Tag

on:
  push:
    tags:
      - 'base-*'
      - 'rknn-*'
      - 'jeston-*'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract tag name
      id: extract_tag
      run: echo "::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}"

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/${{ steps.prep.outputs.REPO_NAME }}:${{ steps.extract_tag.outputs.TAG_NAME }}

  setup-runner:
    needs: build_and_push
    runs-on: ubuntu-latest
    outputs:
      runner_label: ${{ steps.set-runner.outputs.runner_label }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Determine Runner Type
        id: set-runner
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          if [[ $TAG_NAME == base-* ]]; then
            echo "::set-output name=ubuntu-latest"
          elif [[ $TAG_NAME == rknn-* ]]; then
            echo "::set-output name=ubuntu-latest"
          elif [[ $TAG_NAME == jeston-* ]]; then
            echo "::set-output name=ubuntu-latest"
          fi

  build:
    needs: setup-runner
    runs-on: ${{ needs.setup-runner.outputs.runner_label }}
    steps:
      - name: Run Docker build
        run: |
          docker pull -t ${{ secrets.DOCKER_USERNAME }}/${{ steps.prep.outputs.REPO_NAME }}:${{ steps.extract_tag.outputs.TAG_NAME }}
      - name: Run Docker container
        run: > 
          docker run ${{ secrets.DOCKER_USERNAME }}/${{ steps.prep.outputs.REPO_NAME }}:${{ steps.extract_tag.outputs.TAG_NAME }} 
            -e "NODE_REGISTER_URL=${{ secrets.NODE_REGISTER_URL }}" 
            -e "NODE_NAME=${{ steps.prep.outputs.REPO_NAME }}" 
            -e "NODE_VERSION=${{ steps.extract_tag.outputs.TAG_NAME }}"
            -e "NODE_DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${{ steps.prep.outputs.REPO_NAME }}:${{ steps.extract_tag.outputs.TAG_NAME }}"
